<launch>
    <arg name="width" default="1280"/>
    <arg name="height" default="720"/>

    <!-- FROM v4l_imx390_raw.launch -->

    <!-- You can check the device ID and subdev ID for the IMX390 camera attached
    by running /opt/edge_ai_apps/scripts/setup_cameras.sh.
    Accordingly please update the parameters pass as arguments -->
    <arg name="device" default="/dev/video18"/>
    <arg name="subdev" default="/dev/v4l-subdev7"/>
    <!-- framerate (integer): inactive, 30 FPS (default, max) -->
    <!-- Can be enabled by e.g., adding videorate before tiovxdlcolorconvert, but it creases A72 loading -->
    <arg name="framerate" default="30"/>
    <!-- node name -->
    <arg name="node_name" default="gscam_node"/>
    <!-- camera name: also used as namespace for the output topic name -->
    <arg name="camera_name" default="imx390"/>
    <!-- DCC VISS binary file -->
    <arg name="dcc_isp_file" default="/opt/imaging/imx390/dcc_viss.bin"/>
    <!-- DCC 2A binary file -->
    <arg name="dcc_2a_file" default="/opt/imaging/imx390/dcc_2a.bin"/>
    <!-- LDC binary file -->
    <arg name="ldc_dcc_file" default="/opt/imaging/imx390/imx390_35244_equidistant_1280x720_LUT.bin"/>
    <!-- camera_info URL: replace with camera_info from camera calibration -->
    <!-- <arg name="camera_info_url" default="package://gscam/config/IMX390_HD_camera_info.yaml"/> -->
    <!-- <arg name="camera_info_url" default="file:///opt/imaging/imx390/imx390_35244_fisheye.yml"/> -->
    <!-- NOTE: Using the rectified intrinsics here due to the tiovxldc being integrated into the gst pipeline -->
    <arg name="camera_info_url" default="file:///opt/imaging/imx390/imx390_35244_equidistant_1280x720_rect.yml"/>

    <!-- GStreamer pipeline specified in gscam_config was tested with IMX390 camera,
        'edgeai-tiovx-modules' and 'edgeai-gst-plugins' are assumed to be already installed in TDA4 ROS container.
        Raw resolution is 1936 x 1096 at 30 FPS.
        Note: /dev/v4l-subdev ID can change, depending on the device attached, and at reboot. -->
    <node pkg="gscam" name="$(arg node_name)" type="gscam" output="screen">
        <param name="gscam_config"
            value="v4l2src device=$(arg device) do-timestamp=true ! video/x-bayer, width=1936, height=1096, format=rggb12 !
            tiovxisp sink_0::device=$(arg subdev) sensor-name=SENSOR_SONY_IMX390_UB953_D3 dcc-isp-file=$(arg dcc_isp_file)
            sink_0::dcc-2a-file=$(arg dcc_2a_file) format-msb=11 ! video/x-raw, format=NV12 !
            tiovxldc sensor-name=SENSOR_SONY_IMX390_UB953_D3 lut-file=$(arg ldc_dcc_file) ldc-ds-factor=2 ldc-table-width=$(arg width) ldc-table-height=$(arg height) !
            video/x-raw, format=NV12, width=$(arg width), height=$(arg height) !
            tiovxdlcolorconvert target=1 out-pool-size=4 "/>
        <param name="camera_name"     value="$(arg camera_name)"/>
        <param name="camera_info_url" value="$(arg camera_info_url)"/>
        <param name="width"           value="$(arg width)"/>
        <param name="height"          value="$(arg height)"/>
        <param name="framerate"       value="$(arg framerate)"/>
        <param name="sync_sink"       value="false"/>
        <param name="use_gst_timestamps" value="false"/>
        <!-- image encoding: "yuv420" - publish in NV12 -->
        <param name="image_encoding"  value="yuv420"/>
    </node>


    <!-- FROM AOP_3d_Tracking.launch -->

  <arg name="config" value="3d_Tracking" doc="TI mmWave sensor device configuration [3d_best_range_res (not supported by 1642 EVM), 2d_best_range_res]"/>
  <arg name="max_allowed_elevation_angle_deg" default="90" doc="Maximum allowed elevation angle in degrees for detected object data [0 > value >= 90]}"/>
  <arg name="max_allowed_azimuth_angle_deg" default="90" doc="Maximum allowed azimuth angle in degrees for detected object data [0 > value >= 90]}"/>

    <!-- mmWave_Manager node -->
    <node pkg="ti_mmwave_rospkg" type="ti_mmwave_rospkg" name="ti_mmwave" ns="radar_1" output="screen">
        <param name="command_port" value="/dev/ttyXRUSB0"  />
        <param name="command_rate" value="115200"   />
        <param name="data_port" value="/dev/ttyXRUSB1"  />
        <param name="data_rate" value="921600"   />
        <param name="max_allowed_elevation_angle_deg" value="$(arg max_allowed_elevation_angle_deg)"   />
        <param name="max_allowed_azimuth_angle_deg" value="$(arg max_allowed_azimuth_angle_deg)"   />
        <param name="frame_id" value="ti_mmwave_1"/>
        <param name="mmWaveCLI_name" value="/mmWaveCLI" />
        <remap from="/ti_mmwave/radar_scan_pcl" to="/ti_mmwave/radar_scan_pcl_1"/>
    </node>

    <!-- mmWaveQuickConfig node (terminates after configuring mmWave sensor) -->
    <node pkg="ti_mmwave_rospkg" type="mmWaveQuickConfig" name="ti_mmwave_config" ns="radar_1" args="$(find ti_mmwave_rospkg)/cfg/AOP_3d_Tracking.cfg" output="screen" >
        <param name="mmWaveCLI_name" value="/mmWaveCLI" />
    </node>

    <node pkg="tf" type="static_transform_publisher" name="radar_baselink_1" args="5 0 0 0 0 0 ti_mmwave_pcl ti_mmwave_1 100"/>

    <!-- D3 Sensor Fusion -->

    <!-- color conversion for input image_raw for visualization -->
    <node pkg="ti_viz_nodes" type="viz_color_conv_yuv2rgb" name="viz_color_conv_yuv2rgb_node" output="screen" args="" required="true">
        <param name="width"             value="$(arg width)"/>
        <param name="height"            value="$(arg height)"/>
        <param name="input_yuv_topic"   value="imx390/image_raw"/>
        <param name="output_rgb_topic"  value="imx390/image_raw_rgb"/>
        <param name="yuv_format"        value="YUV420"/>
        <param name="yuv420_luma_only"  value="false"/>
    </node>

    <!-- Run this on the host side docker container for visualization
    <node pkg="d3_fusion" type="fusion_pcl.py" name="radar_camera_fusion_node" ns="fusion1" output="screen">
        <param name="camera_name" value="imx390"/>
        <remap from="/image_raw" to="/imx390/image_raw_rgb"/>
    </node>
    -->

</launch>
